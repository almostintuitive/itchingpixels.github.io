<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Technical on Mark Aron Szulyovszky</title><link>https://itchingpixels.com/docs/technical/</link><description>Recent content in Technical on Mark Aron Szulyovszky</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><atom:link href="https://itchingpixels.com/docs/technical/index.xml" rel="self" type="application/rss+xml"/><item><title>Sync APIs - git patch inspired non-blocking client-server communication pattern</title><link>https://itchingpixels.com/docs/technical/sync-endpoints/</link><pubDate>Sat, 04 Apr 2020 00:00:00 +0000</pubDate><guid>https://itchingpixels.com/docs/technical/sync-endpoints/</guid><description>Sync APIs - git patch inspired non-blocking client-server communication pattern Three years ago, we were in a desperate need for a mental model: how to structure the highly asynchronous, non-blocking communication we have between our backend and mobile clients - where Read/Update are the only meaningful operations.
The solution we ended up with was something different than the currently popular CRUD / REST APIs (but closer to GraphQL’s) - and rather close to the concept of git’s patches / diffs.</description></item></channel></rss>